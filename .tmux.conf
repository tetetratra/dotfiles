# スクロール
# set -g mouse on
# bind -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
# bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# tmuxを256色表示できるようにする
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

# ステータスバーをトップに配置する
set-option -g status-position top

# ステータスバーを秒毎に描画し直す
set-option -g status-interval 1

# ウィンドウを閉じた際に番号を詰める
set -g renumber-windows on

# status-right の最大の長さを指定する。
set-option -g status-right-length 150

# status-left の最大の長さを指定する。
set-option -g status-left-length 60

# コピーモードのときに、右上に出てくる表示の色
set -g mode-style fg=black,bg=blue

# status-left のフォーマットを指定する。
set-option -g status-left "#[bg=colour20] #S #[default]"

# window-status のフォーマットを指定する。
#set-window-option -g window-status-format "#[fg=colour31] #I:#W"
set-window-option -g window-status-format "#[bg=colour238,fg=colour7] #W "

# カレントウィンドウの window-status のフォーマットを指定する
#set-window-option -g window-status-current-format "#[fg=colour49] #I:#W#[default]#[fg=colour248]"
set-window-option -g window-status-current-format "#[bg=colour25,fg=colour7]   #W   "

# ステータスバーの表示
set-option -g status-right '#[bg=colour25] #(nowplaying) #[default] #[bg=colour20] #(scselect | grep " \* " | cut -f 2 | sed -E "s/\(|\)//g") #[default] #[bg=colour28] #(pmset -g rawbatt | ruby -e "print $<.to_a[1].split(\";\")[2].to_i")%% #[default] #[bg=colour23] %m/%-d #[default] #[bg=colour24] %H:%M:%S #[default]'

# ウィンドウリストの位置を中心寄せにする
set -g status-justify "centre"

# 設定ファイルをリロードする
bind R source-file ~/.tmux.conf \; display "Reloaded!"

# 新規paneで同じ場所
# | でペインを縦に分割する
bind | split-window -h -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'
#  - でペインを横に分割する
bind - split-window -v -c '#{pane_current_path}'
bind '"' split-window -c '#{pane_current_path}'

# ステータスバーの色を設定する
set -g status-fg colour7
#set -g status-bg colour238
set -g status-bg colour240

# vimのキーバインドでペインをリサイズする
bind C-h resize-pane -L 10
bind C-j resize-pane -D 5
bind C-k resize-pane -U 5
bind C-l resize-pane -R 10

# vimのキーバインドで移動する
bind L next-window
bind H previous-window
bind J switch-client -n
bind K switch-client -p
bind h select-pane -L
bind l select-pane -R
bind j select-pane -D
bind k select-pane -U

bind -n M-o next-window

# bind -n F1 select-window -t 0
# bind -n F2 select-window -t 1
# bind -n F3 select-window -t 2
# bind -n F4 select-window -t 3
# bind -n F5 select-window -t 4
# bind -n F6 select-window -t 5
# bind -n F7 select-window -t 6
# bind -n F8 select-window -t 7
# bind -n F9 select-window -t 8
# bind -n F10 select-window -t 9
# bind -n F11 select-window -t 10
# bind -n F12 select-window -t 11

set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"
setw -g mode-keys vi
bind-key    -T copy-mode-vi v     send-keys -X begin-selection
bind-key    -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key    -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"


# ペインの移動(ローテート)
bind -n C-o select-pane -t :.+

# Explicit `Enter` key fires copying the selection
unbind -T copy-mode MouseDragEnd1Pane
bind-key -T copy-mode Enter send-keys -X copy-pipe "tmux copy-buffer"

set-option -g mouse on

# vim風
set-window-option -g mode-keys vi
# コピーしても終わらせない
bind-key -Tcopy-mode-vi y send -X copy-selection

# ctrl yで即座にコピーモード
bind -n C-y run "tmux copy-mod\;"

# paneの色
set -g window-style        none
set -g window-active-style none
# set -g window-active-style 'bg=colour234'

# esc を早く
set -g escape-time 0

set-option -g default-command "reattach-to-user-namespace -l zsh"

# ウィンドウ履歴の最大行数
set-option -g history-limit 10000

