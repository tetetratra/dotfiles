# 全般設定 {{{
set-option -g mouse on # マウス操作
set -g escape-time 0 # esc を早く
# }}}

# 色系の全般設定 {{{
set-option -g default-terminal screen-256color # tmuxを256色表示できるようにする
# set -g terminal-overrides 'xterm:colors=256' # tmuxを256色表示できるようにする
set -ga terminal-overrides ",xterm-256color-italic:Tc"
# アクティブペインの背景は明るめに、非アクティブペインの背景は暗めにする
set -g window-style 'bg=colour233'
set -g window-active-style 'bg=colour232'
# }}}

# status {{{
set-option -g status-position top # ステータスバーをトップに配置する
set-option -g status-interval 1 # ステータスバーを秒毎に描画し直す
set -g renumber-windows on # ウィンドウを閉じた際に番号を詰める
set -g mode-style 'fg=black,bg=blue' # コピーモードのときに右上に出てくる行表示の色
# right
set-option -g status-right-length 150 # 最大の長さ
set-option -g status-right '\
#[bg=colour9]#(volume| ruby -e "puts gets.to_i.zero? ? nil : \" Speaker ON \"")#[default] \
#[bg=colour208]#(scutil --nc list | grep Connected | rr "\" \" + split[6][1..-2] + \" \"")#[default] \
#[bg=colour60] #(ssid) #[default] \
#[bg=colour28] #(battery)%% #[default] \
#[bg=colour23] %-m/%-d %H:%M:%S [%W]#[default]\
'
# left
set-option -g status-left-length 60 # 最大の長さ
set-option -g status-left "#[bg=colour20] #S #[default]"
# center
# 現在のwindow
set-window-option -g window-status-current-format "\
#[bg=colour25, fg=colour7] #(tmux display-message -p '#I' | ruby -e 'puts gets.to_i.next') #(basename `tmux display-message -p '#{pane_current_path}'`) \
"
# 他のwindow
set-window-option -g window-status-format "\
#[bg=colour238,fg=colour7] #(tmux display-message -p '#I' | rr 'to_i.next') #(basename `tmux display-message -p '#{pane_current_path}'`) \
"
# background
set -g status-justify "centre" # ウィンドウリストの位置を中心寄せにする
set -g status-fg colour7
set -g status-bg colour240
# }}}

# mapping {{{
bind R source-file ~/.tmux.conf \; display "Reloaded!" # 設定ファイルをリロードする
bind | split-window -h -c '#{pane_current_path}' # | でペインを縦に分割する
bind % split-window -h -c '#{pane_current_path}' # % でペインを縦に分割する
bind - split-window -v -c '#{pane_current_path}' # - でペインを横に分割する
bind '"' split-window -c '#{pane_current_path}'  # " でペインを横に分割する
bind c new-window -c "#{pane_current_path}" # 現在のパスで新規windowを作る

# vimのキーバインドでペインをリサイズする
bind C-h resize-pane -L 10
bind C-j resize-pane -D 5
bind C-k resize-pane -U 5
bind C-l resize-pane -R 10
bind < swap-window -t -1\; previous-window
bind > swap-window -t +1\; next-window
# C-b で、Vimではウィンドウの移動をし、tmuxではpaneの移動をする。
# pane_tty : 現在アクティブなペインのTTY (端末)名 (ttyコマンドで得れる /dev/ttys004 のような値)
# is_vim は https://github.com/christoomey/vim-tmux-navigator#add-a-snippet のものを借用
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind C-b if-shell "$is_vim" "send-keys 'C-w' 'w'" 'select-pane -t :.+'
# }}}

# copy mode {{{
# vim風のコピーモード
setw -g mode-keys vi
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind -T copy-mode MouseDragEnd1Pane
bind-key -T copy-mode Enter send-keys -X copy-pipe "tmux copy-buffer"
bind-key -Tcopy-mode-vi y send -X copy-selection # コピーしても終わらせない
set-option -g history-limit 10000 # ウィンドウ履歴の最大行数

bind -n C-y copy-mode # C-y でコピーモードに入る
bind -Tcopy-mode-vi C-y send -X search-backward "❯ "
# }}}

# pane-border {{{
set-option -g pane-border-style fg="colour235",bg=default
set-option -g pane-active-border-style fg="colour238",bg=default
# デフォルト設定だとutf-8文字が区切り文字だからなのか、
# itermの"Ambiguous Double Width"と一緒に使うと表示が崩れる
set -g pane-border-lines simple
# }}}
